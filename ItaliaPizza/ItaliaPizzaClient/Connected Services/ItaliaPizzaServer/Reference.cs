//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ItaliaPizzaClient.ItaliaPizzaServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Productos", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Productos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoProductoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProductosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarcaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrecioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoProducto {
            get {
                return this.CodigoProductoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoProductoField, value) != true)) {
                    this.CodigoProductoField = value;
                    this.RaisePropertyChanged("CodigoProducto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProductos {
            get {
                return this.IdProductosField;
            }
            set {
                if ((this.IdProductosField.Equals(value) != true)) {
                    this.IdProductosField = value;
                    this.RaisePropertyChanged("IdProductos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marca {
            get {
                return this.MarcaField;
            }
            set {
                if ((object.ReferenceEquals(this.MarcaField, value) != true)) {
                    this.MarcaField = value;
                    this.RaisePropertyChanged("Marca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Precio {
            get {
                return this.PrecioField;
            }
            set {
                if ((this.PrecioField.Equals(value) != true)) {
                    this.PrecioField = value;
                    this.RaisePropertyChanged("Precio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoField, value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventarioDeProductos", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class InventarioDeProductos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInventarioDeProductosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProductosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CantidadTotal {
            get {
                return this.CantidadTotalField;
            }
            set {
                if ((this.CantidadTotalField.Equals(value) != true)) {
                    this.CantidadTotalField = value;
                    this.RaisePropertyChanged("CantidadTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInventarioDeProductos {
            get {
                return this.IdInventarioDeProductosField;
            }
            set {
                if ((this.IdInventarioDeProductosField.Equals(value) != true)) {
                    this.IdInventarioDeProductosField = value;
                    this.RaisePropertyChanged("IdInventarioDeProductos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProductos {
            get {
                return this.IdProductosField;
            }
            set {
                if ((this.IdProductosField.Equals(value) != true)) {
                    this.IdProductosField = value;
                    this.RaisePropertyChanged("IdProductos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Empleados", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Empleados : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoMaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoPaternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEmpleadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApellidoMaterno {
            get {
                return this.ApellidoMaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoMaternoField, value) != true)) {
                    this.ApellidoMaternoField = value;
                    this.RaisePropertyChanged("ApellidoMaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApellidoPaterno {
            get {
                return this.ApellidoPaternoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoPaternoField, value) != true)) {
                    this.ApellidoPaternoField = value;
                    this.RaisePropertyChanged("ApellidoPaterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foto {
            get {
                return this.FotoField;
            }
            set {
                if ((object.ReferenceEquals(this.FotoField, value) != true)) {
                    this.FotoField = value;
                    this.RaisePropertyChanged("Foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmpleados {
            get {
                return this.IdEmpleadosField;
            }
            set {
                if ((this.IdEmpleadosField.Equals(value) != true)) {
                    this.IdEmpleadosField = value;
                    this.RaisePropertyChanged("IdEmpleados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rol {
            get {
                return this.RolField;
            }
            set {
                if ((object.ReferenceEquals(this.RolField, value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEmpleadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmpleados {
            get {
                return this.IdEmpleadosField;
            }
            set {
                if ((this.IdEmpleadosField.Equals(value) != true)) {
                    this.IdEmpleadosField = value;
                    this.RaisePropertyChanged("IdEmpleados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rol {
            get {
                return this.RolField;
            }
            set {
                if ((object.ReferenceEquals(this.RolField, value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proveedor", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Proveedor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriaProveedorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProveedoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreCompañiaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreContactoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoriaProveedor {
            get {
                return this.CategoriaProveedorField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriaProveedorField, value) != true)) {
                    this.CategoriaProveedorField = value;
                    this.RaisePropertyChanged("CategoriaProveedor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ciudad {
            get {
                return this.CiudadField;
            }
            set {
                if ((object.ReferenceEquals(this.CiudadField, value) != true)) {
                    this.CiudadField = value;
                    this.RaisePropertyChanged("Ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProveedores {
            get {
                return this.IdProveedoresField;
            }
            set {
                if ((this.IdProveedoresField.Equals(value) != true)) {
                    this.IdProveedoresField = value;
                    this.RaisePropertyChanged("IdProveedores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCompañia {
            get {
                return this.NombreCompañiaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreCompañiaField, value) != true)) {
                    this.NombreCompañiaField = value;
                    this.RaisePropertyChanged("NombreCompañia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreContacto {
            get {
                return this.NombreContactoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreContactoField, value) != true)) {
                    this.NombreContactoField = value;
                    this.RaisePropertyChanged("NombreContacto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pedidos", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Pedidos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomicilioDeEntregaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoDelPedidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaPedidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdClientesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPedidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDelClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductosConcatenadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoDePedidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomicilioDeEntrega {
            get {
                return this.DomicilioDeEntregaField;
            }
            set {
                if ((object.ReferenceEquals(this.DomicilioDeEntregaField, value) != true)) {
                    this.DomicilioDeEntregaField = value;
                    this.RaisePropertyChanged("DomicilioDeEntrega");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstadoDelPedido {
            get {
                return this.EstadoDelPedidoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoDelPedidoField, value) != true)) {
                    this.EstadoDelPedidoField = value;
                    this.RaisePropertyChanged("EstadoDelPedido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaPedido {
            get {
                return this.FechaPedidoField;
            }
            set {
                if ((this.FechaPedidoField.Equals(value) != true)) {
                    this.FechaPedidoField = value;
                    this.RaisePropertyChanged("FechaPedido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdClientes {
            get {
                return this.IdClientesField;
            }
            set {
                if ((this.IdClientesField.Equals(value) != true)) {
                    this.IdClientesField = value;
                    this.RaisePropertyChanged("IdClientes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPedidos {
            get {
                return this.IdPedidosField;
            }
            set {
                if ((this.IdPedidosField.Equals(value) != true)) {
                    this.IdPedidosField = value;
                    this.RaisePropertyChanged("IdPedidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDelCliente {
            get {
                return this.NombreDelClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDelClienteField, value) != true)) {
                    this.NombreDelClienteField = value;
                    this.RaisePropertyChanged("NombreDelCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductosConcatenados {
            get {
                return this.ProductosConcatenadosField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductosConcatenadosField, value) != true)) {
                    this.ProductosConcatenadosField = value;
                    this.RaisePropertyChanged("ProductosConcatenados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipoDePedido {
            get {
                return this.TipoDePedidoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoDePedidoField, value) != true)) {
                    this.TipoDePedidoField = value;
                    this.RaisePropertyChanged("TipoDePedido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insumos", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Insumos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CantidadDeEmpaqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoInsumoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInsumosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarcaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnidadDeMedidaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CantidadDeEmpaque {
            get {
                return this.CantidadDeEmpaqueField;
            }
            set {
                if ((object.ReferenceEquals(this.CantidadDeEmpaqueField, value) != true)) {
                    this.CantidadDeEmpaqueField = value;
                    this.RaisePropertyChanged("CantidadDeEmpaque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoInsumo {
            get {
                return this.CodigoInsumoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoInsumoField, value) != true)) {
                    this.CodigoInsumoField = value;
                    this.RaisePropertyChanged("CodigoInsumo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInsumos {
            get {
                return this.IdInsumosField;
            }
            set {
                if ((this.IdInsumosField.Equals(value) != true)) {
                    this.IdInsumosField = value;
                    this.RaisePropertyChanged("IdInsumos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marca {
            get {
                return this.MarcaField;
            }
            set {
                if ((object.ReferenceEquals(this.MarcaField, value) != true)) {
                    this.MarcaField = value;
                    this.RaisePropertyChanged("Marca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoField, value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnidadDeMedida {
            get {
                return this.UnidadDeMedidaField;
            }
            set {
                if ((object.ReferenceEquals(this.UnidadDeMedidaField, value) != true)) {
                    this.UnidadDeMedidaField = value;
                    this.RaisePropertyChanged("UnidadDeMedida");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventarioDelInsumo", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class InventarioDelInsumo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInsumosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInventarioDelInsumoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CantidadTotal {
            get {
                return this.CantidadTotalField;
            }
            set {
                if ((this.CantidadTotalField.Equals(value) != true)) {
                    this.CantidadTotalField = value;
                    this.RaisePropertyChanged("CantidadTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInsumos {
            get {
                return this.IdInsumosField;
            }
            set {
                if ((this.IdInsumosField.Equals(value) != true)) {
                    this.IdInsumosField = value;
                    this.RaisePropertyChanged("IdInsumos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInventarioDelInsumo {
            get {
                return this.IdInventarioDelInsumoField;
            }
            set {
                if ((this.IdInventarioDelInsumoField.Equals(value) != true)) {
                    this.IdInventarioDelInsumoField = value;
                    this.RaisePropertyChanged("IdInventarioDelInsumo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recetas", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Recetas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionPreparaciónField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRecetasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionPreparación {
            get {
                return this.DescripcionPreparaciónField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionPreparaciónField, value) != true)) {
                    this.DescripcionPreparaciónField = value;
                    this.RaisePropertyChanged("DescripcionPreparación");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRecetas {
            get {
                return this.IdRecetasField;
            }
            set {
                if ((this.IdRecetasField.Equals(value) != true)) {
                    this.IdRecetasField = value;
                    this.RaisePropertyChanged("IdRecetas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorteDeCaja", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class CorteDeCaja : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DineroRestanteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaCorteDeCajaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCorteDeCajaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalIngresosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DineroRestante {
            get {
                return this.DineroRestanteField;
            }
            set {
                if ((this.DineroRestanteField.Equals(value) != true)) {
                    this.DineroRestanteField = value;
                    this.RaisePropertyChanged("DineroRestante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaCorteDeCaja {
            get {
                return this.FechaCorteDeCajaField;
            }
            set {
                if ((this.FechaCorteDeCajaField.Equals(value) != true)) {
                    this.FechaCorteDeCajaField = value;
                    this.RaisePropertyChanged("FechaCorteDeCaja");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCorteDeCaja {
            get {
                return this.IdCorteDeCajaField;
            }
            set {
                if ((this.IdCorteDeCajaField.Equals(value) != true)) {
                    this.IdCorteDeCajaField = value;
                    this.RaisePropertyChanged("IdCorteDeCaja");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalIngresos {
            get {
                return this.TotalIngresosField;
            }
            set {
                if ((this.TotalIngresosField.Equals(value) != true)) {
                    this.TotalIngresosField = value;
                    this.RaisePropertyChanged("TotalIngresos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Turno {
            get {
                return this.TurnoField;
            }
            set {
                if ((object.ReferenceEquals(this.TurnoField, value) != true)) {
                    this.TurnoField = value;
                    this.RaisePropertyChanged("Turno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.IProductManager")]
    public interface IProductManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/RegistrarProducto", ReplyAction="http://tempuri.org/IProductManager/RegistrarProductoResponse")]
        bool RegistrarProducto(ItaliaPizzaClient.ItaliaPizzaServer.Productos producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/RegistrarProducto", ReplyAction="http://tempuri.org/IProductManager/RegistrarProductoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarProductoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Productos producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ProductoYaRegistrado", ReplyAction="http://tempuri.org/IProductManager/ProductoYaRegistradoResponse")]
        bool ProductoYaRegistrado(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ProductoYaRegistrado", ReplyAction="http://tempuri.org/IProductManager/ProductoYaRegistradoResponse")]
        System.Threading.Tasks.Task<bool> ProductoYaRegistradoAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ObtenerListaProductos", ReplyAction="http://tempuri.org/IProductManager/ObtenerListaProductosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Productos[] ObtenerListaProductos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ObtenerListaProductos", ReplyAction="http://tempuri.org/IProductManager/ObtenerListaProductosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos[]> ObtenerListaProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/EliminarProducto", ReplyAction="http://tempuri.org/IProductManager/EliminarProductoResponse")]
        bool EliminarProducto(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/EliminarProducto", ReplyAction="http://tempuri.org/IProductManager/EliminarProductoResponse")]
        System.Threading.Tasks.Task<bool> EliminarProductoAsync(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ActualizarProducto", ReplyAction="http://tempuri.org/IProductManager/ActualizarProductoResponse")]
        bool ActualizarProducto(int idProducto, string nombre, string codigoProducto, string marca, string tipo, double precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ActualizarProducto", ReplyAction="http://tempuri.org/IProductManager/ActualizarProductoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarProductoAsync(int idProducto, string nombre, string codigoProducto, string marca, string tipo, double precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/RegistrarStockProducto", ReplyAction="http://tempuri.org/IProductManager/RegistrarStockProductoResponse")]
        bool RegistrarStockProducto(int idProducto, int cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/RegistrarStockProducto", ReplyAction="http://tempuri.org/IProductManager/RegistrarStockProductoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarStockProductoAsync(int idProducto, int cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/InventarioDeProductos", ReplyAction="http://tempuri.org/IProductManager/InventarioDeProductosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos[] InventarioDeProductos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/InventarioDeProductos", ReplyAction="http://tempuri.org/IProductManager/InventarioDeProductosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos[]> InventarioDeProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ObtenerInventarioDeProducto", ReplyAction="http://tempuri.org/IProductManager/ObtenerInventarioDeProductoResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos ObtenerInventarioDeProducto(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/ObtenerInventarioDeProducto", ReplyAction="http://tempuri.org/IProductManager/ObtenerInventarioDeProductoResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos> ObtenerInventarioDeProductoAsync(int idProducto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.IProductManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.IProductManager>, ItaliaPizzaClient.ItaliaPizzaServer.IProductManager {
        
        public ProductManagerClient() {
        }
        
        public ProductManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarProducto(ItaliaPizzaClient.ItaliaPizzaServer.Productos producto) {
            return base.Channel.RegistrarProducto(producto);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarProductoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Productos producto) {
            return base.Channel.RegistrarProductoAsync(producto);
        }
        
        public bool ProductoYaRegistrado(string nombre) {
            return base.Channel.ProductoYaRegistrado(nombre);
        }
        
        public System.Threading.Tasks.Task<bool> ProductoYaRegistradoAsync(string nombre) {
            return base.Channel.ProductoYaRegistradoAsync(nombre);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Productos[] ObtenerListaProductos() {
            return base.Channel.ObtenerListaProductos();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos[]> ObtenerListaProductosAsync() {
            return base.Channel.ObtenerListaProductosAsync();
        }
        
        public bool EliminarProducto(int idProducto) {
            return base.Channel.EliminarProducto(idProducto);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarProductoAsync(int idProducto) {
            return base.Channel.EliminarProductoAsync(idProducto);
        }
        
        public bool ActualizarProducto(int idProducto, string nombre, string codigoProducto, string marca, string tipo, double precio) {
            return base.Channel.ActualizarProducto(idProducto, nombre, codigoProducto, marca, tipo, precio);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarProductoAsync(int idProducto, string nombre, string codigoProducto, string marca, string tipo, double precio) {
            return base.Channel.ActualizarProductoAsync(idProducto, nombre, codigoProducto, marca, tipo, precio);
        }
        
        public bool RegistrarStockProducto(int idProducto, int cantidad) {
            return base.Channel.RegistrarStockProducto(idProducto, cantidad);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarStockProductoAsync(int idProducto, int cantidad) {
            return base.Channel.RegistrarStockProductoAsync(idProducto, cantidad);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos[] InventarioDeProductos() {
            return base.Channel.InventarioDeProductos();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos[]> InventarioDeProductosAsync() {
            return base.Channel.InventarioDeProductosAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos ObtenerInventarioDeProducto(int idProducto) {
            return base.Channel.ObtenerInventarioDeProducto(idProducto);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDeProductos> ObtenerInventarioDeProductoAsync(int idProducto) {
            return base.Channel.ObtenerInventarioDeProductoAsync(idProducto);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IniciarSesion", ReplyAction="http://tempuri.org/IUserManager/IniciarSesionResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Empleados IniciarSesion(string correo, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IniciarSesion", ReplyAction="http://tempuri.org/IUserManager/IniciarSesionResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Empleados> IniciarSesionAsync(string correo, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/RegistrarEmpleado", ReplyAction="http://tempuri.org/IUserManager/RegistrarEmpleadoResponse")]
        bool RegistrarEmpleado(ItaliaPizzaClient.ItaliaPizzaServer.Empleados usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/RegistrarEmpleado", ReplyAction="http://tempuri.org/IUserManager/RegistrarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarEmpleadoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Empleados usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/RegistrarClientes", ReplyAction="http://tempuri.org/IUserManager/RegistrarClientesResponse")]
        bool RegistrarClientes(ItaliaPizzaClient.ItaliaPizzaServer.Cliente usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/RegistrarClientes", ReplyAction="http://tempuri.org/IUserManager/RegistrarClientesResponse")]
        System.Threading.Tasks.Task<bool> RegistrarClientesAsync(ItaliaPizzaClient.ItaliaPizzaServer.Cliente usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UsuarioYaRegistrado", ReplyAction="http://tempuri.org/IUserManager/UsuarioYaRegistradoResponse")]
        bool UsuarioYaRegistrado(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UsuarioYaRegistrado", ReplyAction="http://tempuri.org/IUserManager/UsuarioYaRegistradoResponse")]
        System.Threading.Tasks.Task<bool> UsuarioYaRegistradoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ObtenerListaUsuarios", ReplyAction="http://tempuri.org/IUserManager/ObtenerListaUsuariosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Empleados[] ObtenerListaUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ObtenerListaUsuarios", ReplyAction="http://tempuri.org/IUserManager/ObtenerListaUsuariosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Empleados[]> ObtenerListaUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EliminarEmpleados", ReplyAction="http://tempuri.org/IUserManager/EliminarEmpleadosResponse")]
        bool EliminarEmpleados(int idEmpleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/EliminarEmpleados", ReplyAction="http://tempuri.org/IUserManager/EliminarEmpleadosResponse")]
        System.Threading.Tasks.Task<bool> EliminarEmpleadosAsync(int idEmpleados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ActualizarEmpleado", ReplyAction="http://tempuri.org/IUserManager/ActualizarEmpleadoResponse")]
        bool ActualizarEmpleado(int idEmpleados, string nombre, string apellidoPaterno, string apellidoMaterno, string correo, string telefono, string contraseña, string rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ActualizarEmpleado", ReplyAction="http://tempuri.org/IUserManager/ActualizarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarEmpleadoAsync(int idEmpleados, string nombre, string apellidoPaterno, string apellidoMaterno, string correo, string telefono, string contraseña, string rol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.IUserManager>, ItaliaPizzaClient.ItaliaPizzaServer.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Empleados IniciarSesion(string correo, string contraseña) {
            return base.Channel.IniciarSesion(correo, contraseña);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Empleados> IniciarSesionAsync(string correo, string contraseña) {
            return base.Channel.IniciarSesionAsync(correo, contraseña);
        }
        
        public bool RegistrarEmpleado(ItaliaPizzaClient.ItaliaPizzaServer.Empleados usuarios) {
            return base.Channel.RegistrarEmpleado(usuarios);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarEmpleadoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Empleados usuarios) {
            return base.Channel.RegistrarEmpleadoAsync(usuarios);
        }
        
        public bool RegistrarClientes(ItaliaPizzaClient.ItaliaPizzaServer.Cliente usuarios) {
            return base.Channel.RegistrarClientes(usuarios);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarClientesAsync(ItaliaPizzaClient.ItaliaPizzaServer.Cliente usuarios) {
            return base.Channel.RegistrarClientesAsync(usuarios);
        }
        
        public bool UsuarioYaRegistrado(string correo) {
            return base.Channel.UsuarioYaRegistrado(correo);
        }
        
        public System.Threading.Tasks.Task<bool> UsuarioYaRegistradoAsync(string correo) {
            return base.Channel.UsuarioYaRegistradoAsync(correo);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Empleados[] ObtenerListaUsuarios() {
            return base.Channel.ObtenerListaUsuarios();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Empleados[]> ObtenerListaUsuariosAsync() {
            return base.Channel.ObtenerListaUsuariosAsync();
        }
        
        public bool EliminarEmpleados(int idEmpleados) {
            return base.Channel.EliminarEmpleados(idEmpleados);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarEmpleadosAsync(int idEmpleados) {
            return base.Channel.EliminarEmpleadosAsync(idEmpleados);
        }
        
        public bool ActualizarEmpleado(int idEmpleados, string nombre, string apellidoPaterno, string apellidoMaterno, string correo, string telefono, string contraseña, string rol) {
            return base.Channel.ActualizarEmpleado(idEmpleados, nombre, apellidoPaterno, apellidoMaterno, correo, telefono, contraseña, rol);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarEmpleadoAsync(int idEmpleados, string nombre, string apellidoPaterno, string apellidoMaterno, string correo, string telefono, string contraseña, string rol) {
            return base.Channel.ActualizarEmpleadoAsync(idEmpleados, nombre, apellidoPaterno, apellidoMaterno, correo, telefono, contraseña, rol);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.ISupplierManager")]
    public interface ISupplierManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/RegistrarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/RegistrarProveedorResponse")]
        bool RegistrarProveedor(ItaliaPizzaClient.ItaliaPizzaServer.Proveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/RegistrarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/RegistrarProveedorResponse")]
        System.Threading.Tasks.Task<bool> RegistrarProveedorAsync(ItaliaPizzaClient.ItaliaPizzaServer.Proveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ObtenerListaProveedor", ReplyAction="http://tempuri.org/ISupplierManager/ObtenerListaProveedorResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Proveedor[] ObtenerListaProveedor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ObtenerListaProveedor", ReplyAction="http://tempuri.org/ISupplierManager/ObtenerListaProveedorResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Proveedor[]> ObtenerListaProveedorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/EliminarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/EliminarProveedorResponse")]
        bool EliminarProveedor(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/EliminarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/EliminarProveedorResponse")]
        System.Threading.Tasks.Task<bool> EliminarProveedorAsync(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ActualizarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/ActualizarProveedorResponse")]
        bool ActualizarProveedor(int idProveedor, string nuevoNombreCompañia, string nuevoNombreContacto, string nuevoTelefono, string nuevaCiudad, string nuevaDireccion, string nuevoEstado, string nuevaCategoriaProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/ActualizarProveedor", ReplyAction="http://tempuri.org/ISupplierManager/ActualizarProveedorResponse")]
        System.Threading.Tasks.Task<bool> ActualizarProveedorAsync(int idProveedor, string nuevoNombreCompañia, string nuevoNombreContacto, string nuevoTelefono, string nuevaCiudad, string nuevaDireccion, string nuevoEstado, string nuevaCategoriaProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/CompañiaYaExistente", ReplyAction="http://tempuri.org/ISupplierManager/CompañiaYaExistenteResponse")]
        bool CompañiaYaExistente(string nombreCompañia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierManager/CompañiaYaExistente", ReplyAction="http://tempuri.org/ISupplierManager/CompañiaYaExistenteResponse")]
        System.Threading.Tasks.Task<bool> CompañiaYaExistenteAsync(string nombreCompañia);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.ISupplierManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.ISupplierManager>, ItaliaPizzaClient.ItaliaPizzaServer.ISupplierManager {
        
        public SupplierManagerClient() {
        }
        
        public SupplierManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarProveedor(ItaliaPizzaClient.ItaliaPizzaServer.Proveedor proveedor) {
            return base.Channel.RegistrarProveedor(proveedor);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarProveedorAsync(ItaliaPizzaClient.ItaliaPizzaServer.Proveedor proveedor) {
            return base.Channel.RegistrarProveedorAsync(proveedor);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Proveedor[] ObtenerListaProveedor() {
            return base.Channel.ObtenerListaProveedor();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Proveedor[]> ObtenerListaProveedorAsync() {
            return base.Channel.ObtenerListaProveedorAsync();
        }
        
        public bool EliminarProveedor(int idProveedor) {
            return base.Channel.EliminarProveedor(idProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarProveedorAsync(int idProveedor) {
            return base.Channel.EliminarProveedorAsync(idProveedor);
        }
        
        public bool ActualizarProveedor(int idProveedor, string nuevoNombreCompañia, string nuevoNombreContacto, string nuevoTelefono, string nuevaCiudad, string nuevaDireccion, string nuevoEstado, string nuevaCategoriaProveedor) {
            return base.Channel.ActualizarProveedor(idProveedor, nuevoNombreCompañia, nuevoNombreContacto, nuevoTelefono, nuevaCiudad, nuevaDireccion, nuevoEstado, nuevaCategoriaProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarProveedorAsync(int idProveedor, string nuevoNombreCompañia, string nuevoNombreContacto, string nuevoTelefono, string nuevaCiudad, string nuevaDireccion, string nuevoEstado, string nuevaCategoriaProveedor) {
            return base.Channel.ActualizarProveedorAsync(idProveedor, nuevoNombreCompañia, nuevoNombreContacto, nuevoTelefono, nuevaCiudad, nuevaDireccion, nuevoEstado, nuevaCategoriaProveedor);
        }
        
        public bool CompañiaYaExistente(string nombreCompañia) {
            return base.Channel.CompañiaYaExistente(nombreCompañia);
        }
        
        public System.Threading.Tasks.Task<bool> CompañiaYaExistenteAsync(string nombreCompañia) {
            return base.Channel.CompañiaYaExistenteAsync(nombreCompañia);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.IOrderManager")]
    public interface IOrderManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RegistrarNuevoPedido", ReplyAction="http://tempuri.org/IOrderManager/RegistrarNuevoPedidoResponse")]
        void RegistrarNuevoPedido(string nombreCliente, int idEmpleado, string domicilio, string tipoPedido, decimal total, int[] idProductos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RegistrarNuevoPedido", ReplyAction="http://tempuri.org/IOrderManager/RegistrarNuevoPedidoResponse")]
        System.Threading.Tasks.Task RegistrarNuevoPedidoAsync(string nombreCliente, int idEmpleado, string domicilio, string tipoPedido, decimal total, int[] idProductos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarInformacionPedidos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarInformacionPedidosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Pedidos[] RecuperarInformacionPedidos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarInformacionPedidos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarInformacionPedidosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Pedidos[]> RecuperarInformacionPedidosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/ModificarEstadoDePedido", ReplyAction="http://tempuri.org/IOrderManager/ModificarEstadoDePedidoResponse")]
        bool ModificarEstadoDePedido(int pedidoId, string nuevoEstado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/ModificarEstadoDePedido", ReplyAction="http://tempuri.org/IOrderManager/ModificarEstadoDePedidoResponse")]
        System.Threading.Tasks.Task<bool> ModificarEstadoDePedidoAsync(int pedidoId, string nuevoEstado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarInformacionProductos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarInformacionProductosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Productos[] RecuperarInformacionProductos(string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarInformacionProductos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarInformacionProductosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos[]> RecuperarInformacionProductosAsync(string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/ActualizarPedido", ReplyAction="http://tempuri.org/IOrderManager/ActualizarPedidoResponse")]
        void ActualizarPedido(int idPedido, string nombreCliente, string domicilio, string tipoPedido, decimal total, int[] idProductos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/ActualizarPedido", ReplyAction="http://tempuri.org/IOrderManager/ActualizarPedidoResponse")]
        System.Threading.Tasks.Task ActualizarPedidoAsync(int idPedido, string nombreCliente, string domicilio, string tipoPedido, decimal total, int[] idProductos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedido", ReplyAction="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidoResponse")]
        int[] RecuperarIdsProductosDePedido(int idPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedido", ReplyAction="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidoResponse")]
        System.Threading.Tasks.Task<int[]> RecuperarIdsProductosDePedidoAsync(int idPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarProductoPorId", ReplyAction="http://tempuri.org/IOrderManager/RecuperarProductoPorIdResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Productos RecuperarProductoPorId(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarProductoPorId", ReplyAction="http://tempuri.org/IOrderManager/RecuperarProductoPorIdResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos> RecuperarProductoPorIdAsync(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidosResponse")]
        int[] RecuperarIdsProductosDePedidos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidos", ReplyAction="http://tempuri.org/IOrderManager/RecuperarIdsProductosDePedidosResponse")]
        System.Threading.Tasks.Task<int[]> RecuperarIdsProductosDePedidosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.IOrderManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.IOrderManager>, ItaliaPizzaClient.ItaliaPizzaServer.IOrderManager {
        
        public OrderManagerClient() {
        }
        
        public OrderManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegistrarNuevoPedido(string nombreCliente, int idEmpleado, string domicilio, string tipoPedido, decimal total, int[] idProductos) {
            base.Channel.RegistrarNuevoPedido(nombreCliente, idEmpleado, domicilio, tipoPedido, total, idProductos);
        }
        
        public System.Threading.Tasks.Task RegistrarNuevoPedidoAsync(string nombreCliente, int idEmpleado, string domicilio, string tipoPedido, decimal total, int[] idProductos) {
            return base.Channel.RegistrarNuevoPedidoAsync(nombreCliente, idEmpleado, domicilio, tipoPedido, total, idProductos);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Pedidos[] RecuperarInformacionPedidos() {
            return base.Channel.RecuperarInformacionPedidos();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Pedidos[]> RecuperarInformacionPedidosAsync() {
            return base.Channel.RecuperarInformacionPedidosAsync();
        }
        
        public bool ModificarEstadoDePedido(int pedidoId, string nuevoEstado) {
            return base.Channel.ModificarEstadoDePedido(pedidoId, nuevoEstado);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarEstadoDePedidoAsync(int pedidoId, string nuevoEstado) {
            return base.Channel.ModificarEstadoDePedidoAsync(pedidoId, nuevoEstado);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Productos[] RecuperarInformacionProductos(string tipo) {
            return base.Channel.RecuperarInformacionProductos(tipo);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos[]> RecuperarInformacionProductosAsync(string tipo) {
            return base.Channel.RecuperarInformacionProductosAsync(tipo);
        }
        
        public void ActualizarPedido(int idPedido, string nombreCliente, string domicilio, string tipoPedido, decimal total, int[] idProductos) {
            base.Channel.ActualizarPedido(idPedido, nombreCliente, domicilio, tipoPedido, total, idProductos);
        }
        
        public System.Threading.Tasks.Task ActualizarPedidoAsync(int idPedido, string nombreCliente, string domicilio, string tipoPedido, decimal total, int[] idProductos) {
            return base.Channel.ActualizarPedidoAsync(idPedido, nombreCliente, domicilio, tipoPedido, total, idProductos);
        }
        
        public int[] RecuperarIdsProductosDePedido(int idPedido) {
            return base.Channel.RecuperarIdsProductosDePedido(idPedido);
        }
        
        public System.Threading.Tasks.Task<int[]> RecuperarIdsProductosDePedidoAsync(int idPedido) {
            return base.Channel.RecuperarIdsProductosDePedidoAsync(idPedido);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Productos RecuperarProductoPorId(int idProducto) {
            return base.Channel.RecuperarProductoPorId(idProducto);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Productos> RecuperarProductoPorIdAsync(int idProducto) {
            return base.Channel.RecuperarProductoPorIdAsync(idProducto);
        }
        
        public int[] RecuperarIdsProductosDePedidos() {
            return base.Channel.RecuperarIdsProductosDePedidos();
        }
        
        public System.Threading.Tasks.Task<int[]> RecuperarIdsProductosDePedidosAsync() {
            return base.Channel.RecuperarIdsProductosDePedidosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.IInsumoManager")]
    public interface IInsumoManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/RegistrarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/RegistrarInsumoResponse")]
        bool RegistrarInsumo(ItaliaPizzaClient.ItaliaPizzaServer.Insumos insumo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/RegistrarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/RegistrarInsumoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarInsumoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Insumos insumo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/InsumoYaRegistrado", ReplyAction="http://tempuri.org/IInsumoManager/InsumoYaRegistradoResponse")]
        bool InsumoYaRegistrado(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/InsumoYaRegistrado", ReplyAction="http://tempuri.org/IInsumoManager/InsumoYaRegistradoResponse")]
        System.Threading.Tasks.Task<bool> InsumoYaRegistradoAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ObtenerListaInsumos", ReplyAction="http://tempuri.org/IInsumoManager/ObtenerListaInsumosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Insumos[] ObtenerListaInsumos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ObtenerListaInsumos", ReplyAction="http://tempuri.org/IInsumoManager/ObtenerListaInsumosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Insumos[]> ObtenerListaInsumosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/EliminarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/EliminarInsumoResponse")]
        bool EliminarInsumo(int idInsumo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/EliminarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/EliminarInsumoResponse")]
        System.Threading.Tasks.Task<bool> EliminarInsumoAsync(int idInsumo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ActualizarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/ActualizarInsumoResponse")]
        bool ActualizarInsumo(int idInsumo, string nombre, string codigoInsumo, string marca, string tipo, string cantidadDeEmpaque, string unidadDeMedida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ActualizarInsumo", ReplyAction="http://tempuri.org/IInsumoManager/ActualizarInsumoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarInsumoAsync(int idInsumo, string nombre, string codigoInsumo, string marca, string tipo, string cantidadDeEmpaque, string unidadDeMedida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/RegistrarStockInsumo", ReplyAction="http://tempuri.org/IInsumoManager/RegistrarStockInsumoResponse")]
        bool RegistrarStockInsumo(int idInsumo, int cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/RegistrarStockInsumo", ReplyAction="http://tempuri.org/IInsumoManager/RegistrarStockInsumoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarStockInsumoAsync(int idInsumo, int cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/InventarioDeInsumos", ReplyAction="http://tempuri.org/IInsumoManager/InventarioDeInsumosResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo[] InventarioDeInsumos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/InventarioDeInsumos", ReplyAction="http://tempuri.org/IInsumoManager/InventarioDeInsumosResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo[]> InventarioDeInsumosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ObtenerInventarioDeInsumo", ReplyAction="http://tempuri.org/IInsumoManager/ObtenerInventarioDeInsumoResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo ObtenerInventarioDeInsumo(int idInsumo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsumoManager/ObtenerInventarioDeInsumo", ReplyAction="http://tempuri.org/IInsumoManager/ObtenerInventarioDeInsumoResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo> ObtenerInventarioDeInsumoAsync(int idInsumo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInsumoManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.IInsumoManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsumoManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.IInsumoManager>, ItaliaPizzaClient.ItaliaPizzaServer.IInsumoManager {
        
        public InsumoManagerClient() {
        }
        
        public InsumoManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsumoManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsumoManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsumoManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarInsumo(ItaliaPizzaClient.ItaliaPizzaServer.Insumos insumo) {
            return base.Channel.RegistrarInsumo(insumo);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarInsumoAsync(ItaliaPizzaClient.ItaliaPizzaServer.Insumos insumo) {
            return base.Channel.RegistrarInsumoAsync(insumo);
        }
        
        public bool InsumoYaRegistrado(string nombre) {
            return base.Channel.InsumoYaRegistrado(nombre);
        }
        
        public System.Threading.Tasks.Task<bool> InsumoYaRegistradoAsync(string nombre) {
            return base.Channel.InsumoYaRegistradoAsync(nombre);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Insumos[] ObtenerListaInsumos() {
            return base.Channel.ObtenerListaInsumos();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Insumos[]> ObtenerListaInsumosAsync() {
            return base.Channel.ObtenerListaInsumosAsync();
        }
        
        public bool EliminarInsumo(int idInsumo) {
            return base.Channel.EliminarInsumo(idInsumo);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarInsumoAsync(int idInsumo) {
            return base.Channel.EliminarInsumoAsync(idInsumo);
        }
        
        public bool ActualizarInsumo(int idInsumo, string nombre, string codigoInsumo, string marca, string tipo, string cantidadDeEmpaque, string unidadDeMedida) {
            return base.Channel.ActualizarInsumo(idInsumo, nombre, codigoInsumo, marca, tipo, cantidadDeEmpaque, unidadDeMedida);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarInsumoAsync(int idInsumo, string nombre, string codigoInsumo, string marca, string tipo, string cantidadDeEmpaque, string unidadDeMedida) {
            return base.Channel.ActualizarInsumoAsync(idInsumo, nombre, codigoInsumo, marca, tipo, cantidadDeEmpaque, unidadDeMedida);
        }
        
        public bool RegistrarStockInsumo(int idInsumo, int cantidad) {
            return base.Channel.RegistrarStockInsumo(idInsumo, cantidad);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarStockInsumoAsync(int idInsumo, int cantidad) {
            return base.Channel.RegistrarStockInsumoAsync(idInsumo, cantidad);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo[] InventarioDeInsumos() {
            return base.Channel.InventarioDeInsumos();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo[]> InventarioDeInsumosAsync() {
            return base.Channel.InventarioDeInsumosAsync();
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo ObtenerInventarioDeInsumo(int idInsumo) {
            return base.Channel.ObtenerInventarioDeInsumo(idInsumo);
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.InventarioDelInsumo> ObtenerInventarioDeInsumoAsync(int idInsumo) {
            return base.Channel.ObtenerInventarioDeInsumoAsync(idInsumo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.IRecipeManager")]
    public interface IRecipeManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RegistrarReceta", ReplyAction="http://tempuri.org/IRecipeManager/RegistrarRecetaResponse")]
        bool RegistrarReceta(ItaliaPizzaClient.ItaliaPizzaServer.Recetas receta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RegistrarReceta", ReplyAction="http://tempuri.org/IRecipeManager/RegistrarRecetaResponse")]
        System.Threading.Tasks.Task<bool> RegistrarRecetaAsync(ItaliaPizzaClient.ItaliaPizzaServer.Recetas receta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RecetaYaRegistrado", ReplyAction="http://tempuri.org/IRecipeManager/RecetaYaRegistradoResponse")]
        bool RecetaYaRegistrado(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/RecetaYaRegistrado", ReplyAction="http://tempuri.org/IRecipeManager/RecetaYaRegistradoResponse")]
        System.Threading.Tasks.Task<bool> RecetaYaRegistradoAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/ObtenerListaReceta", ReplyAction="http://tempuri.org/IRecipeManager/ObtenerListaRecetaResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.Recetas[] ObtenerListaReceta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/ObtenerListaReceta", ReplyAction="http://tempuri.org/IRecipeManager/ObtenerListaRecetaResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Recetas[]> ObtenerListaRecetaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/EliminarReceta", ReplyAction="http://tempuri.org/IRecipeManager/EliminarRecetaResponse")]
        bool EliminarReceta(int idReceta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/EliminarReceta", ReplyAction="http://tempuri.org/IRecipeManager/EliminarRecetaResponse")]
        System.Threading.Tasks.Task<bool> EliminarRecetaAsync(int idReceta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/ActualizarReceta", ReplyAction="http://tempuri.org/IRecipeManager/ActualizarRecetaResponse")]
        bool ActualizarReceta(int idReceta, string nombre, string descripcionPreparación);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeManager/ActualizarReceta", ReplyAction="http://tempuri.org/IRecipeManager/ActualizarRecetaResponse")]
        System.Threading.Tasks.Task<bool> ActualizarRecetaAsync(int idReceta, string nombre, string descripcionPreparación);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecipeManagerChannel : ItaliaPizzaClient.ItaliaPizzaServer.IRecipeManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecipeManagerClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.IRecipeManager>, ItaliaPizzaClient.ItaliaPizzaServer.IRecipeManager {
        
        public RecipeManagerClient() {
        }
        
        public RecipeManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecipeManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarReceta(ItaliaPizzaClient.ItaliaPizzaServer.Recetas receta) {
            return base.Channel.RegistrarReceta(receta);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarRecetaAsync(ItaliaPizzaClient.ItaliaPizzaServer.Recetas receta) {
            return base.Channel.RegistrarRecetaAsync(receta);
        }
        
        public bool RecetaYaRegistrado(string nombre) {
            return base.Channel.RecetaYaRegistrado(nombre);
        }
        
        public System.Threading.Tasks.Task<bool> RecetaYaRegistradoAsync(string nombre) {
            return base.Channel.RecetaYaRegistradoAsync(nombre);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.Recetas[] ObtenerListaReceta() {
            return base.Channel.ObtenerListaReceta();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.Recetas[]> ObtenerListaRecetaAsync() {
            return base.Channel.ObtenerListaRecetaAsync();
        }
        
        public bool EliminarReceta(int idReceta) {
            return base.Channel.EliminarReceta(idReceta);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarRecetaAsync(int idReceta) {
            return base.Channel.EliminarRecetaAsync(idReceta);
        }
        
        public bool ActualizarReceta(int idReceta, string nombre, string descripcionPreparación) {
            return base.Channel.ActualizarReceta(idReceta, nombre, descripcionPreparación);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarRecetaAsync(int idReceta, string nombre, string descripcionPreparación) {
            return base.Channel.ActualizarRecetaAsync(idReceta, nombre, descripcionPreparación);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItaliaPizzaServer.ICashRecord")]
    public interface ICashRecord {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecord/RegistrarNuevoCorteDeCaja", ReplyAction="http://tempuri.org/ICashRecord/RegistrarNuevoCorteDeCajaResponse")]
        void RegistrarNuevoCorteDeCaja(System.DateTime fechaCorteDeCaja, double totalIngresos, double dineroRestante, string turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecord/RegistrarNuevoCorteDeCaja", ReplyAction="http://tempuri.org/ICashRecord/RegistrarNuevoCorteDeCajaResponse")]
        System.Threading.Tasks.Task RegistrarNuevoCorteDeCajaAsync(System.DateTime fechaCorteDeCaja, double totalIngresos, double dineroRestante, string turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecord/RecuperarInformacionDeCortesDeCaja", ReplyAction="http://tempuri.org/ICashRecord/RecuperarInformacionDeCortesDeCajaResponse")]
        ItaliaPizzaClient.ItaliaPizzaServer.CorteDeCaja[] RecuperarInformacionDeCortesDeCaja();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecord/RecuperarInformacionDeCortesDeCaja", ReplyAction="http://tempuri.org/ICashRecord/RecuperarInformacionDeCortesDeCajaResponse")]
        System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.CorteDeCaja[]> RecuperarInformacionDeCortesDeCajaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICashRecordChannel : ItaliaPizzaClient.ItaliaPizzaServer.ICashRecord, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CashRecordClient : System.ServiceModel.ClientBase<ItaliaPizzaClient.ItaliaPizzaServer.ICashRecord>, ItaliaPizzaClient.ItaliaPizzaServer.ICashRecord {
        
        public CashRecordClient() {
        }
        
        public CashRecordClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CashRecordClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegistrarNuevoCorteDeCaja(System.DateTime fechaCorteDeCaja, double totalIngresos, double dineroRestante, string turno) {
            base.Channel.RegistrarNuevoCorteDeCaja(fechaCorteDeCaja, totalIngresos, dineroRestante, turno);
        }
        
        public System.Threading.Tasks.Task RegistrarNuevoCorteDeCajaAsync(System.DateTime fechaCorteDeCaja, double totalIngresos, double dineroRestante, string turno) {
            return base.Channel.RegistrarNuevoCorteDeCajaAsync(fechaCorteDeCaja, totalIngresos, dineroRestante, turno);
        }
        
        public ItaliaPizzaClient.ItaliaPizzaServer.CorteDeCaja[] RecuperarInformacionDeCortesDeCaja() {
            return base.Channel.RecuperarInformacionDeCortesDeCaja();
        }
        
        public System.Threading.Tasks.Task<ItaliaPizzaClient.ItaliaPizzaServer.CorteDeCaja[]> RecuperarInformacionDeCortesDeCajaAsync() {
            return base.Channel.RecuperarInformacionDeCortesDeCajaAsync();
        }
    }
}
